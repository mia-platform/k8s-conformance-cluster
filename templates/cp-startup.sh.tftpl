#!/usr/bin/env bash

# Copyright Mia srl
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o pipefail
set -o nounset

# node configuration lifted from
# https://kubernetes.io/docs/setup/production-environment/container-runtimes/#install-and-configure-prerequisites
# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

# ensure the latest version of the packages installed are available
DEBIAN_FRONTEND=noninteractive apt-get update -yq && \
	DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-transport-https ca-certificates curl gpg && \
	DEBIAN_FRONTEND=noninteractive apt-get autoclean -yq && \
	DEBIAN_FRONTEND=noninteractive apt-get autoremove -yq

# setup kubernetes and containerd repository for apt
mkdir -p /etc/apt/keyrings
curl -fsSL --proto '=https' --tlsv1.2 https://pkgs.k8s.io/core:/stable:/v${cluster_version}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
tee /etc/apt/sources.list.d/kubernetes.list << EOF
deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v${cluster_version}/deb/ /
EOF

curl -fsSL --proto '=https' --tlsv1.2 https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
chmod a+r /etc/apt/keyrings/docker.asc
tee /etc/apt/sources.list.d/docker.list << EOF
deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$${VERSION_CODENAME}") stable
EOF
DEBIAN_FRONTEND=noninteractive apt-get update -yq

# install containerd and configure it
DEBIAN_FRONTEND=noninteractive apt-get install -yq containerd.io

# setup containerd with default config and enable systemd cgroup config
containerd config default > /etc/containerd/config.toml
sed -i 's|SystemdCgroup = false|SystemdCgroup = true|g' /etc/containerd/config.toml
systemctl daemon-reload --no-block
systemctl restart containerd --no-block

# install kubeadm, kubelet and kubectl
DEBIAN_FRONTEND=noninteractive apt-get install -y kubeadm \
	kubelet \
	kubectl
DEBIAN_FRONTEND=noninteractive apt-mark hold kubeadm kubelet kubectl

# setup control-plane
kubeadm init --pod-network-cidr="${pod_network_cidr}" --token="${token}" --node-name="$(hostname -f)"

# install local storage class provider
kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.32/deploy/local-path-storage.yaml
kubectl --kubeconfig /etc/kubernetes/admin.conf patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

# setup kubernetes config for root user
mkdir -p /root/.kube
cp -i /etc/kubernetes/admin.conf /root/.kube/config
chown root:root /root/.kube/config
